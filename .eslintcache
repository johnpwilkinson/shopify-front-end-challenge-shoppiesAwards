[{"/Users/john/Documents/shoppies/src/reportWebVitals.js":"1","/Users/john/Documents/shoppies/src/App.js":"2","/Users/john/Documents/shoppies/src/components/Suggestions.js":"3","/Users/john/Documents/shoppies/src/index.js":"4","/Users/john/Documents/shoppies/src/components/Search.js":"5","/Users/john/Documents/shoppies/src/components/Nominations.js":"6","/Users/john/Documents/shoppies/src/components/Nav.js":"7","/Users/john/Documents/shoppies/src/components/Toast.js":"8","/Users/john/Documents/shoppies/src/components/HelpModal.js":"9","/Users/john/Documents/shoppies/src/components/DetailModal.js":"10","/Users/john/Documents/shoppies/src/components/DetailRow.js":"11","/Users/john/Documents/shoppies/src/components/MyNoms.js":"12","/Users/john/Documents/shoppies/src/components/helpers.js":"13","/Users/john/Documents/shoppies/src/components/Share.js":"14"},{"size":362,"mtime":1608522437144,"results":"15","hashOfConfig":"16"},{"size":704,"mtime":1608737464805,"results":"17","hashOfConfig":"16"},{"size":2317,"mtime":1608783637480,"results":"18","hashOfConfig":"16"},{"size":730,"mtime":1608734719190,"results":"19","hashOfConfig":"16"},{"size":7917,"mtime":1608854196344,"results":"20","hashOfConfig":"16"},{"size":1463,"mtime":1608846877865,"results":"21","hashOfConfig":"16"},{"size":684,"mtime":1608871820599,"results":"22","hashOfConfig":"16"},{"size":1968,"mtime":1608850615010,"results":"23","hashOfConfig":"16"},{"size":1577,"mtime":1608651788154,"results":"24","hashOfConfig":"16"},{"size":3384,"mtime":1608664147567,"results":"25","hashOfConfig":"16"},{"size":371,"mtime":1608832932144,"results":"26","hashOfConfig":"16"},{"size":7491,"mtime":1608871669382,"results":"27","hashOfConfig":"16"},{"size":959,"mtime":1608785504295,"results":"28","hashOfConfig":"16"},{"size":1812,"mtime":1608870077512,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"khomuw",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/john/Documents/shoppies/src/reportWebVitals.js",[],["67","68"],"/Users/john/Documents/shoppies/src/App.js",["69"],"import \"./App.css\";\nimport Search from \"./components/Search\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Switch, Route, useLocation } from \"react-router-dom\";\nimport MyNoms from './components/MyNoms'\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\nfunction App() {\n\n  let query = useQuery()\n\n  return (\n    <div className=\"App\">\n      {/* <Nav /> */}\n      <Switch>\n        <Route path=\"/summary/\">\n          <Nav />\n          <MyNoms name={query.get('query')} />\n        </Route>\n        <Route exact path=\"/\">\n          <Nav />\n          <Search />\n        </Route>\n      </Switch>\n      {/* <Search /> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/john/Documents/shoppies/src/components/Suggestions.js",["70","71"],"import React from \"react\";\nimport { Navbar, ListGroup, Button, Row, Col } from \"react-bootstrap\";\nimport Toast from \"./Toast\";\nimport { InfoCircleFill, Info } from \"react-bootstrap-icons\";\nimport DetailModal from \"./DetailModal\";\n\nfunction Suggestions(props) {\n  const noms = props.nominations.map((movie) => movie.title);\n  console.log(noms);\n  return (\n    <div>\n      <Navbar expand=\"lg\" className=\"status\">\n        <Navbar.Brand className=\"mx-auto\">\n          <span className=\"shopifyFont dark-color\">Suggestions</span>\n        </Navbar.Brand>\n      </Navbar>\n      <div>\n        {(props.results || []).map((movie, index) => (\n          <ListGroup className=\"suggestionsList status listy\">\n            <Row key={index} className=\"detail light-color-bg\">\n              <Col>\n                {/* {console.log(movie.imdbID)} */}\n                <p className=\"shopifyDetailFont\">\n                  {movie.Title} - {movie.Year}{\" \"}\n                  <span onClick={() => props.getDetails(movie.imdbID)}>\n                    <small>\n                      <InfoCircleFill />\n                    </small>\n                  </span>\n                </p>\n              </Col>\n              <Col sm={3}>\n                {noms.indexOf(movie.Title) > -1 ? (\n                  <div className=\"d-flex flex-row-reverse\">\n                    <Button\n                      disabled\n                      onClick={() => {\n                        props.nominate(movie.Title, movie.Year, movie.imdbID);\n                      }}\n                    >\n                      Nominate\n                    </Button>\n                  </div>\n                ) : (\n                  <div className=\"d-flex flex-row-reverse\">\n                    <Button\n                      onClick={() => {\n                        props.nominate(movie.Title, movie.Year, movie.imdbID);\n                      }}\n                    >\n                      Nominate\n                    </Button>\n                  </div>\n                )}\n              </Col>\n            </Row>\n            <DetailModal\n              show={props.toggleDetailStatus}\n              toggleModal={props.toggleDetailModal}\n              movieDetail={props.movieDetail}\n            />\n          </ListGroup>\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default Suggestions;\n",["72","73"],"/Users/john/Documents/shoppies/src/index.js",[],"/Users/john/Documents/shoppies/src/components/Search.js",["74"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Suggestions from \"./Suggestions\";\nimport Nominations from \"./Nominations\";\nimport uuid from \"react-uuid\";\nimport { Toast, Container, Jumbotron, Form, Row, Col } from \"react-bootstrap\";\nimport ToastPop from \"./Toast\";\nimport HelpModal from \"./HelpModal\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n// import { OMDB_URL, OMDB_KEY } from \"./utils/urls\";\n\nclass Search extends Component {\n  state = {\n    query: \"\",\n    results: [],\n    nominations: [],\n    showToast: [false, \"\"],\n    showModal: false,\n    showDetailModal: false,\n    movieDetail: {},\n    summary: [],\n    saveToast: false,\n    nominationIMDBIDs: \"\",\n    name: \"\",\n    redirect: false,\n    goto: \"\",\n    // showFullToast: [false,\n  };\n\n  //   componentDidMount() {\n  //     if (localStorage.getItem(\"nominations\") !== null) {\n  //       const nominations = localStorage.getItem(\"nominations\");\n  //       this.setState({ nominations });\n  //     }\n  //   }\n  componentDidMount() {\n    const nominations = localStorage.getItem(\"nominations\");\n    if (nominations) this.setState({ nominations: JSON.parse(nominations) });\n  }\n\n  getInfo = () => {\n    axios\n      .get(\n        `http://www.omdbapi.com/?apikey=977ea3e&type=movie&s=${this.state.query}`\n      )\n      .then((res) => res.data)\n      .then((res) => {\n        this.setState({\n          results: res.Search,\n        });\n      });\n  };\n\n  handleInputChange = (event) => {\n    event.preventDefault();\n    if (event.target.id === \"saveNoms\") {\n      this.setState({\n        name: event.target.value,\n      });\n    } else {\n      this.setState(\n        {\n          query: event.target.value,\n        },\n        () => {\n          this.getInfo();\n        }\n      );\n    }\n  };\n\n  addNomination = (title, year, imdbId) => {\n    if (this.state.nominations.length < 5) {\n      console.log(title, year);\n      let nominations = [...this.state.nominations];\n      let newMovie = {\n        id: uuid(),\n        title: title,\n        year: year,\n        imdbid: imdbId,\n      };\n      nominations.push(newMovie);\n      this.setState({ nominations }, () => {\n        localStorage.setItem(\n          \"nominations\",\n          JSON.stringify(this.state.nominations)\n        );\n      });\n    } else {\n      this.setState({\n        showToast: [\n          true,\n          \"üö® Oh, No üö®\",\n          \"There are SO MANY great movies, but please only nominate five\",\n        ],\n      });\n    }\n    if (this.state.nominations.length === 4) {\n      this.setState({\n        showToast: [\n          true,\n          \"üèÜ Congratulations üèÜ\",\n          \"‚úÖ You chose 5Ô∏è‚É£ fantastic films!\",\n        ],\n      });\n    }\n  };\n\n  closeToast = () => {\n    this.setState({\n      showToast: [false, \"\"],\n    });\n  };\n\n  delNomination = (id) => {\n    localStorage.clear();\n    let nominations = this.state.nominations.filter((movie) => movie.id !== id);\n    this.setState({ nominations }, () => {\n      localStorage.setItem(\n        \"nominations\",\n        JSON.stringify(this.state.nominations)\n      );\n    });\n  };\n\n  toggleHelp = () => {\n    !this.state.showModal\n      ? this.setState({\n          showModal: true,\n        })\n      : this.setState({\n          showModal: false,\n        });\n  };\n\n  toggleDetail = () => {\n    this.setState({\n      showDetailModal: false,\n    });\n  };\n\n  getDetails = (id) => {\n    // console.log(\"yes\");\n    axios\n      .get(`http://www.omdbapi.com/?apikey=977ea3e&i=${id}`)\n      .then((res) => res.data)\n      .then((res) => {\n        console.log(res.Title);\n        this.setState({\n          movieDetail: {\n            title: res.Title,\n            year: res.Year,\n            rated: res.Rated,\n            released: res.Released,\n            runtime: res.Runtime,\n            genre: res.Genre,\n            director: res.Director,\n            writer: res.Writer,\n            actors: res.Actors,\n            plot: res.Plot,\n            language: res.Language,\n            country: res.Country,\n            awards: res.Awards,\n            poster: res.Poster,\n            metascore: res.Metascore,\n            imdbrating: res.imdbRating,\n            imdbvotes: res.imdbVotes,\n            imdbid: res.imdbID,\n          },\n        });\n      });\n    this.setState({\n      showDetailModal: true,\n    });\n  };\n\n  toggleSave = (urls) => {\n    if (this.state.nominations.length === 5) {\n      this.setState({\n        showToast: [true, \"üèÜ Save Your Nominations üèÜ\", \"‚úÖ Enter Your Name\"],\n        saveToast: true,\n      });\n    }\n  };\n  saveNoms = (event) => {\n    event.preventDefault();\n    let name = this.state.name;\n    let noms = [...this.state.nominations];\n    let nomImdbIds = \"\";\n    noms.map((noms) => (nomImdbIds += noms.imdbid + \",\"));\n    let payload = name + \",\" + nomImdbIds.slice(0, -1);\n    let url = `/summary?query=${payload}`;\n    this.setState({\n      nominationIMDBIDs: payload,\n      goto: url,\n      redirect: true,\n    });\n    // this.renderRedirect(payload)\n  };\n\n  // renderRedirect = () => {\n  //   return <Redirect to={this.state.goto}/>\n  // }\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to={this.state.goto} />;\n    }\n\n    return (\n      <Container fluid>\n        <Row>\n          <Container fluid>\n            <Jumbotron>\n              {/* <h1 className=\"shopifyFont\">Nominate a movie</h1> */}\n              <Row className=\"d-flex justify-content-between\">\n                <Col>\n                  <div className=\"logo-font\">\n                    <h1 className=\"shopifyFont\">Nominate a movie</h1>\n                  </div>\n                </Col>\n                <Col className=\"align-self-end\">\n                  <div\n                    className=\"help-font ml-auto text-right\"\n                    onClick={this.toggleHelp}\n                  >\n                    <div id=\"help\">Help</div>\n                  </div>\n                </Col>\n              </Row>\n              <Form>\n                <Form.Group>\n                  <Form.Control\n                    placeholder=\"Find your favorite movie...\"\n                    onChange={this.handleInputChange}\n                  />\n                </Form.Group>\n              </Form>\n              <Row className=\"d-flex justify-content-between\">\n                <Col></Col>\n                <Col className=\"align-self-end\">\n                  <div\n                    className=\"help-font ml-auto text-right\"\n                    onClick={this.toggleSave}\n                  >\n                    <div id=\"help\">Save Your Nominations</div>\n                  </div>\n                </Col>\n              </Row>\n            </Jumbotron>\n          </Container>\n        </Row>\n        <Row\n          style={{\n            zIndex: 0,\n          }}\n        >\n          <Col>\n            <Suggestions\n              results={this.state.results}\n              nominate={this.addNomination}\n              nominations={this.state.nominations}\n              toggleDetailModal={this.toggleDetail}\n              toggleDetailStatus={this.state.showDetailModal}\n              movieDetail={this.state.movieDetail}\n              getDetails={this.getDetails}\n            />\n          </Col>\n          <ToastPop\n            show={this.state.showToast[0]}\n            top={this.state.showToast[1]}\n            message={this.state.showToast[2]}\n            closeToast={this.closeToast}\n            saveToast={this.state.saveToast}\n            saveNoms={this.saveNoms}\n            noms={this.state.nominationIMDBIDs}\n            handleInputChange={this.handleInputChange}\n          />\n          <Col>\n            <Nominations\n              nominations={this.state.nominations}\n              delNomination={this.delNomination}\n            />\n          </Col>\n        </Row>\n        <HelpModal show={this.state.showModal} toggleModal={this.toggleHelp} />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Search);\n","/Users/john/Documents/shoppies/src/components/Nominations.js",[],"/Users/john/Documents/shoppies/src/components/Nav.js",["75"],"/Users/john/Documents/shoppies/src/components/Toast.js",["76","77","78"],"import React, { useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Toast,\n  Button,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\n\nfunction ToastPop(props) {\n  //   const [showA, setShowA] = useState(true);\n  //   const [showB, setShowB] = useState(true);\n\n  //   const toggleShowA = () => setShowA(!showA);\n  //   const toggleShowB = () => setShowB(!showB);\n  // onClose={props.closeToast}\n\n  return (\n    // <div\n    //   style={{\n    //     position: \"relative\",\n    //     minHeight: \"200px\",\n    //   }}\n    // >\n    <Toast\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n      show={props.show}\n      onClose={props.closeToast}\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        right: 0,\n        minHeight: \"200px\",\n        minWidth: \"500px\",\n        left: \"50%\",\n        top: \"30%\",\n        transform: \"translateX(-50%)\",\n      }}\n      role=\"alert\"\n    >\n      <Toast.Header>\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n        <strong className=\"mr-auto toastTop\">{props.top}</strong>\n      </Toast.Header>\n      <Toast.Body className=\"mx-auto toastText\">\n        <div className=\"text-center\">\n          <span className=\"toastText\">{props.message}</span>\n        </div>\n        {props.saveToast ? (\n          <div>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                id=\"saveNoms\"\n                placeholder=\"What's Your Name?\"\n                aria-label=\"What's Your Name?\"\n                aria-describedby=\"basic-addon2\"\n                onChange={props.handleInputChange}\n              />\n              <InputGroup.Append>\n                <Button onClick={props.saveNoms} variant=\"outline-secondary\">\n                  Save\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </Toast.Body>\n    </Toast>\n    // </div>\n  );\n}\n\nexport default ToastPop;\n","/Users/john/Documents/shoppies/src/components/HelpModal.js",[],"/Users/john/Documents/shoppies/src/components/DetailModal.js",[],"/Users/john/Documents/shoppies/src/components/DetailRow.js",["79","80","81","82","83","84"],"import React from \"react\";\nimport { Navbar, ListGroup, Row, Col, Button, Table } from \"react-bootstrap\";\n\nfunction DetailRow(props) {\n  return (\n    <tr className=\"ml-1\">\n      <td sm={6} className=\"shopifyFont detCat\">\n        {props.category}\n      </td>\n      <td sm={6} className=\"detCat\">\n        {props.value}\n      </td>\n    </tr>\n  );\n}\nexport default DetailRow;\n","/Users/john/Documents/shoppies/src/components/MyNoms.js",["85","86","87","88","89"],"/Users/john/Documents/shoppies/src/components/helpers.js",["90","91","92"],"import axios from \"axios\";\n\nexport const getDetails = (id) => {\n  // console.log(\"yes\");\n  axios\n    .get(`http://www.omdbapi.com/?apikey=977ea3e&i=${id}`)\n    .then((res) => res.data)\n    .then((res) => {\n      console.log(res.Title);\n      let summary = [... this.state.summary]\n      let movie = {\n        title: res.Title,\n        year: res.Year,\n        rated: res.Rated,\n        released: res.Released,\n        runtime: res.Runtime,\n        genre: res.Genre,\n        director: res.Director,\n        writer: res.Writer,\n        actors: res.Actors,\n        plot: res.Plot,\n        language: res.Language,\n        country: res.Country,\n        awards: res.Awards,\n        poster: res.Poster,\n        metascore: res.Metascore,\n        imdbrating: res.imdbRating,\n        imdbvotes: res.imdbVotes,\n        imdbid: res.imdbID,\n      };\n      this.setState({\n        summary: {},\n      });\n    });\n};\n\nexport const hello = (word) => `<h1>Hello, ${word}</h1>`;\n",["93","94"],"/Users/john/Documents/shoppies/src/components/Share.js",["95","96","97","98","99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":4,"column":27,"nodeType":"107","messageId":"108","endLine":4,"endColumn":33},{"ruleId":"105","severity":1,"message":"109","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"105","severity":1,"message":"110","line":4,"column":26,"nodeType":"107","messageId":"108","endLine":4,"endColumn":30},{"ruleId":"101","replacedBy":"111"},{"ruleId":"103","replacedBy":"112"},{"ruleId":"105","severity":1,"message":"109","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":15},{"ruleId":"105","severity":1,"message":"113","line":3,"column":20,"nodeType":"107","messageId":"108","endLine":3,"endColumn":29},{"ruleId":"105","severity":1,"message":"114","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"115","line":4,"column":3,"nodeType":"107","messageId":"108","endLine":4,"endColumn":6},{"ruleId":"105","severity":1,"message":"116","line":5,"column":3,"nodeType":"107","messageId":"108","endLine":5,"endColumn":6},{"ruleId":"105","severity":1,"message":"117","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"118","line":2,"column":18,"nodeType":"107","messageId":"108","endLine":2,"endColumn":27},{"ruleId":"105","severity":1,"message":"115","line":2,"column":29,"nodeType":"107","messageId":"108","endLine":2,"endColumn":32},{"ruleId":"105","severity":1,"message":"116","line":2,"column":34,"nodeType":"107","messageId":"108","endLine":2,"endColumn":37},{"ruleId":"105","severity":1,"message":"119","line":2,"column":39,"nodeType":"107","messageId":"108","endLine":2,"endColumn":45},{"ruleId":"105","severity":1,"message":"120","line":2,"column":47,"nodeType":"107","messageId":"108","endLine":2,"endColumn":52},{"ruleId":"105","severity":1,"message":"106","line":11,"column":27,"nodeType":"107","messageId":"108","endLine":11,"endColumn":33},{"ruleId":"105","severity":1,"message":"121","line":11,"column":35,"nodeType":"107","messageId":"108","endLine":11,"endColumn":41},{"ruleId":"105","severity":1,"message":"122","line":11,"column":43,"nodeType":"107","messageId":"108","endLine":11,"endColumn":54},{"ruleId":"105","severity":1,"message":"123","line":12,"column":10,"nodeType":"107","messageId":"108","endLine":12,"endColumn":20},{"ruleId":"105","severity":1,"message":"124","line":12,"column":22,"nodeType":"107","messageId":"108","endLine":12,"endColumn":27},{"ruleId":"105","severity":1,"message":"125","line":10,"column":11,"nodeType":"107","messageId":"108","endLine":10,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":10,"column":25,"nodeType":"128","messageId":"129","endLine":10,"endColumn":26,"fix":"130"},{"ruleId":"105","severity":1,"message":"131","line":11,"column":11,"nodeType":"107","messageId":"108","endLine":11,"endColumn":16},{"ruleId":"101","replacedBy":"132"},{"ruleId":"103","replacedBy":"133"},{"ruleId":"105","severity":1,"message":"117","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"118","line":2,"column":18,"nodeType":"107","messageId":"108","endLine":2,"endColumn":27},{"ruleId":"105","severity":1,"message":"115","line":2,"column":29,"nodeType":"107","messageId":"108","endLine":2,"endColumn":32},{"ruleId":"105","severity":1,"message":"116","line":2,"column":34,"nodeType":"107","messageId":"108","endLine":2,"endColumn":37},{"ruleId":"105","severity":1,"message":"119","line":2,"column":39,"nodeType":"107","messageId":"108","endLine":2,"endColumn":45},{"ruleId":"105","severity":1,"message":"120","line":2,"column":47,"nodeType":"107","messageId":"108","endLine":2,"endColumn":52},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Toast' is defined but never used.","'Info' is defined but never used.",["134"],["135"],"'Container' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Navbar' is defined but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'Table' is defined but never used.","'Switch' is defined but never used.","'useLocation' is defined but never used.","'getDetails' is defined but never used.","'hello' is defined but never used.","'summary' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"136","text":"137"},"'movie' is assigned a value but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation",[260,261],""]